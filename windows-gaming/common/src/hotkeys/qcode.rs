use super::Key;

pub fn key_convert(key: Key) -> Option<&'static str> {
    Some(match key {
        Key::LShiftKey => "shift",
        Key::RShiftKey => "shift_r",
        Key::LMenu => "alt",
        Key::RMenu => "alt_r",
        Key::LControlKey => "ctrl",
        Key::RControlKey => "ctrl_r",
        Key::Apps => "menu", // NOTE
        Key::Escape => "esc",
        Key::D0 => "0",
        Key::D1 => "1",
        Key::D2 => "2",
        Key::D3 => "3",
        Key::D4 => "4",
        Key::D5 => "5",
        Key::D6 => "6",
        Key::D7 => "7",
        Key::D8 => "8",
        Key::D9 => "9",
        Key::OemMinus => "minus",
        Key::Oemplus => "equal",
        Key::Back => "backspace",
        Key::Tab => "tab",
        Key::A => "a",
        Key::B => "b",
        Key::C => "c",
        Key::D => "d",
        Key::E => "e",
        Key::F => "f",
        Key::G => "g",
        Key::H => "h",
        Key::I => "i",
        Key::J => "j",
        Key::K => "k",
        Key::L => "l",
        Key::M => "m",
        Key::N => "n",
        Key::O => "o",
        Key::P => "p",
        Key::Q => "q",
        Key::R => "r",
        Key::S => "s",
        Key::T => "t",
        Key::U => "u",
        Key::V => "v",
        Key::W => "w",
        Key::X => "x",
        Key::Y => "y",
        Key::Z => "z",
        Key::Enter => "ret",
        Key::Oem1 => "semicolon",
        Key::Oem7 => "apostrophe",
        Key::Oem3 => "grave_accent",
        Key::Oem5 => "backslash",
        Key::Oemcomma => "comma",
        Key::OemPeriod => "dot",
        Key::Oem2 => "slash",
        Key::Space => "spc",
        Key::CapsLock => "caps_lock",
        Key::F1 => "f1",
        Key::F2 => "f2",
        Key::F3 => "f3",
        Key::F4 => "f4",
        Key::F5 => "f5",
        Key::F6 => "f6",
        Key::F7 => "f7",
        Key::F8 => "f8",
        Key::F9 => "f9",
        Key::F10 => "f10",
        Key::F11 => "f11",
        Key::F12 => "f12",
        Key::NumLock => "num_lock",
        Key::Scroll => "scroll_lock",
        Key::Divide => "kp_divide",
        Key::Multiply => "kp_multiply",
        Key::Subtract => "kp_subtract",
        Key::Add => "kp_add",
        Key::Separator => "kp_enter",
        Key::Decimal => "kp_decimal",
        Key::PrintScreen => "sysrq",
        Key::NumPad0 => "kp_0",
        Key::NumPad1 => "kp_1",
        Key::NumPad2 => "kp_2",
        Key::NumPad3 => "kp_3",
        Key::NumPad4 => "kp_4",
        Key::NumPad5 => "kp_5",
        Key::NumPad6 => "kp_6",
        Key::NumPad7 => "kp_7",
        Key::NumPad8 => "kp_8",
        Key::NumPad9 => "kp_9",
        Key::Oem102 => "less",
        Key::Home => "home",
        Key::PageUp => "pgup",
        Key::PageDown => "pgdn",
        Key::End => "end",
        Key::Left => "left",
        Key::Up => "up",
        Key::Down => "down",
        Key::Right => "right",
        Key::Insert => "insert",
        Key::Delete => "delete",
        Key::VolumeMute => return None,
        Key::VolumeDown => return None,
        Key::VolumeUp => return None,
        Key::Pause => "pause",
        //=> "kp_comma",
        //Key::Separator => "kp_equals",
        Key::LWin => "meta_l",
        Key::RWin => "meta_r",
        //"power" => "power",
        Key::Oem4 => "bracket_left",
        Key::Oem6 => "bracket_right",
        Key::MediaNextTrack => return None,
        Key::MediaPreviousTrack => return None,
        Key::MediaStop => return None,
        Key::MediaPlayPause => return None,
    })
}
